[{"/Users/Used/Documents/Practice-Projects/react-forms/src/App.js":"1","/Users/Used/Documents/Practice-Projects/react-forms/src/index.js":"2","/Users/Used/Documents/Practice-Projects/react-forms/src/components/AutoForm.js":"3","/Users/Used/Documents/Practice-Projects/react-forms/src/components/Field.js":"4","/Users/Used/Documents/Practice-Projects/react-forms/src/formConfig.js":"5","/Users/Used/Documents/Practice-Projects/react-forms/src/components/Spinner.js":"6"},{"size":219,"mtime":1611801825258,"results":"7","hashOfConfig":"8"},{"size":220,"mtime":1611790919661,"results":"9","hashOfConfig":"8"},{"size":729,"mtime":1611804239745,"results":"10","hashOfConfig":"8"},{"size":759,"mtime":1611854776283,"results":"11","hashOfConfig":"8"},{"size":759,"mtime":1611801788035,"results":"12","hashOfConfig":"8"},{"size":327,"mtime":1611804124523,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1oowz4h",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/Used/Documents/Practice-Projects/react-forms/src/App.js",[],["28","29"],"/Users/Used/Documents/Practice-Projects/react-forms/src/index.js",[],"/Users/Used/Documents/Practice-Projects/react-forms/src/components/AutoForm.js",["30","31"],"import { useState } from 'react';\nimport { css } from '@emotion/css'\nimport Field from './Field';\nimport Spinner from './Spinner';\n\n\nfunction AutoForm({ form }) {\n  // initialize fields with form feilds props\n  const [fields, setFields] = useState(\n    form.fields.map(field => ({\n      ...field,\n      name: field.name || field.label,\n      value: ''\n    }))\n  )\n  \n  /*\n  console.log(fields)\n  {label: \"Email\"\n    name: \"Email\"\n    placeholder: \"xyz@gmail.com\"\n    required: true\n    type: \"email\"\n    value: \"\"\n  } \n  */\n\n  return (\n    <form>\n      {\n        fields.map(field => (\n          <Field field={field} />\n        ))\n      }\n\n      <div>\n        <Spinner />\n      </div>\n    </form>\n  );\n}\n\nexport default AutoForm;\n","/Users/Used/Documents/Practice-Projects/react-forms/src/components/Field.js",[],"/Users/Used/Documents/Practice-Projects/react-forms/src/formConfig.js",[],"/Users/Used/Documents/Practice-Projects/react-forms/src/components/Spinner.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":10,"nodeType":"38","messageId":"39","endLine":2,"endColumn":13},{"ruleId":"36","severity":1,"message":"40","line":9,"column":18,"nodeType":"38","messageId":"39","endLine":9,"endColumn":27},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'css' is defined but never used.","Identifier","unusedVar","'setFields' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]